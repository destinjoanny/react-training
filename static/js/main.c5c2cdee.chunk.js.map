{"version":3,"sources":["day1-practice/components/beforeHooks/stateless.jsx","day1-practice/components/beforeHooks/statefull.jsx","day1-practice/Button.jsx","day1-practice/counterApp.js","day2-practice/inline/TitleComponent.jsx","day3-practice/Router.jsx","day4-practice/react-redux/TransferApp/reducer.js","day4-practice/react-redux/store.js","day4-practice/react-redux/TransferApp/index.js","day4-practice/react-redux/index.js","App.js","index.js"],"names":["Button","props","onClick","klik","text","Component","color","func","sym","style","background","Judul","count","TitleComponent","border","width","margin","borderRadius","backgroundColor","padding","RouterApp","intitialState","balance","balanceReducer","state","action","type","confirmation","window","confirm","alert","store","createStore","TransferApp","useSelector","dispatch","useDispatch","className","ReactRedux","App","ReactDOM","render","document","getElementById"],"mappings":"8PAMeA,EANA,SAACC,GACd,OACE,wBAAQC,QAASD,EAAME,KAAvB,SAA8BF,EAAMG,QCCTC,Y,2BCFhB,SAASL,EAAT,GAAoC,IAAnBM,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAAMC,EAAK,EAALA,IAG3C,OACE,wBAAQC,MAAO,CAACC,WAAWJ,GAAQJ,QAASK,EAA5C,SAAmDC,ICD9BH,Y,IAuCnBM,EAAQ,SAACV,GACb,OACE,6BAAKA,EAAMW,S,OCnCA,SAASC,EAAT,GAAiC,IAART,EAAO,EAAPA,KACtC,OACE,qBAAKK,MAAO,CACVK,OAAO,oBACPC,MAAM,MACNC,OAAO,cACPC,aAAa,OACbC,gBAAiB,UACjBC,QAAQ,eANV,SAQEf,I,iBCyBSgB,I,qBCzCTC,EAAgB,CAClBC,QAAS,GAiCIC,EA9BQ,WAAkC,IAAjCC,EAAgC,uDAA1BH,EAAeI,EAAW,uCACtD,OAAQA,EAAOC,MACb,IAAK,UACH,MAAO,CACLJ,QAASE,EAAMF,QAAU,KAG7B,IAAK,UACH,MAAO,CACLA,QAASE,EAAMF,QAAU,KAG7B,IAAK,eACH,IAAMK,EAAeC,OAAOC,QAAQ,eACpC,GAAIF,EAAa,CACf,KAAIH,EAAMF,QAAU,KAKlB,OADAQ,MAAM,WACC,CACLR,QAASE,EAAMF,QAAU,KAL3BQ,MAAM,oBASZ,QACE,OAAON,ICnBAO,EANDC,YAAYT,GCLX,SAASU,IACpB,IAAMX,EAAUY,aAAY,SAAAV,GAAK,OAAIA,EAAMF,WACrCa,EAAWC,cAEjB,OACI,sBAAKC,UAAU,6CAAf,UACA,cAACxB,EAAD,CAAgBT,KAAI,kCAA6BkB,KACjD,uBACA,uBACA,qBAAKe,UAAU,SAAf,sCACA,uBACA,wBAAQnC,QAAS,kBAAMiC,EAAS,CAACT,KAAM,aAAaW,UAAU,gFAA9D,4BACA,wBAAQnC,QAAS,kBAAMiC,EAAS,CAACT,KAAM,aAAaW,UAAU,sFAA9D,4BACA,uBACA,qBAAKA,UAAU,SAAf,qCAEA,uBAEA,wBAAQnC,QAAS,kBAAMiC,EAAS,CAACT,KAAM,kBAAkBW,UAAU,4EAAnE,8BChBO,SAASC,IACtB,OACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SAEE,cAAC,EAAD,MCgBSQ,MAff,WAEE,OAME,aALA,CAKA,OAAKF,UAAU,WAAf,SAEE,cAACC,EAAD,OCfNE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c5c2cdee.chunk.js","sourcesContent":["const Button = (props) => {\r\n  return(\r\n    <button onClick={props.klik}>{props.text}</button>\r\n  )\r\n}\r\n\r\nexport default Button","import React, { Component } from 'react'\r\nimport Button from './stateless'\r\n\r\nclass StatefullExample extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      balance : 0\r\n    }\r\n  }\r\n\r\n  addSaldo1000(){\r\n    this.setState({\r\n      balance: this.state.balance + 1000\r\n    })\r\n  }\r\n\r\n  addSaldo5000(){\r\n    this.setState({\r\n      balance: this.state.balance + 5000\r\n    })\r\n  }\r\n\r\n  tarikSaldo1000(){\r\n    alert('Anday yakin?')\r\n    this.setState({\r\n      balance: this.state.balance - 1000\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        Saldo anda adalah : Rp. {this.state.balance}\r\n        <br />\r\n        <hr />\r\n        Apakah mau tambah saldo?\r\n        <br />\r\n        <button onClick={() => this.addSaldo1000()}>Tambbah Rp.1000</button>\r\n        <button onClick={() => this.addSaldo5000()}>Tambbah Rp.5000</button>\r\n        <hr />\r\n        Apakah mau tarik saldo?\r\n        <br/>\r\n        {/* <button onClick={() => this.tarikSaldo1000()}>Tarik Rp.1000</button> */}\r\n        <Button klik={() => this.tarikSaldo1000()} text={\"Tarik Rp. 1000\"}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StatefullExample","//es5 -> stateless\r\nexport default function Button({color, func, sym}){ //destructuring\r\n  // const {color, func, sym} = props\r\n\r\n  return(\r\n    <button style={{background:color}} onClick={func}>{sym}</button>\r\n  )\r\n}","import { Component, Fragment } from \"react\";\r\nimport Button from \"./Button\";\r\n\r\n//Statefull Component\r\nclass CounterApp extends Component{\r\n  //componentDidMount\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      count: 0\r\n    }\r\n  }\r\n\r\n  //ComponentDidUpdate /ComponentWillUpdate\r\n  //ES6 arrow function\r\n  increase = () => {\r\n    this.setState({ //method dari class component untuk merubah state\r\n      count: this.state.count + 1\r\n    })\r\n  }\r\n\r\n  decrease = () => {\r\n    this.setState({\r\n      count: this.state.count - 1\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {count} = this.state //destructuring\r\n\r\n    //return JSX\r\n    return(\r\n      <Fragment> \r\n        <Judul count={count}/>\r\n        <Button func={this.increase} color=\"blue\" sym=\"+\"/>\r\n        <Button func={this.decrease} color=\"green\" sym=\"-\"/>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n//arrow function -> membuat stateless component -> es6\r\n//Stateless component\r\nconst Judul = (props) => {\r\n  return(\r\n    <h1>{props.count}</h1>\r\n  )\r\n}\r\n\r\nexport default CounterApp","import React from 'react'\r\n\r\n//you can add export\r\nconst divStyle = {\r\n  border:\"1px solid blue\", \r\n  width:\"30%\", \r\n  margin:\"0 35% 0 35%\", //top right bottom left\r\n  borderRadius:'15px'\r\n}\r\n\r\nexport default function TitleComponent({text}) {\r\n  return (\r\n    <div style={{\r\n      border:\"3px solid #a4de02\", \r\n      width:\"60%\", \r\n      margin:\"0 20% 0 20%\", //top right bottom left\r\n      borderRadius:'20px',\r\n      backgroundColor: \"#a4de02\",\r\n      padding:\"5px 0 5px 0\"\r\n      }}>\r\n     {text}\r\n    </div>\r\n  )\r\n}\r\n","import {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\r\nimport FetchDataHooks from '../day1-practice/FetchHooks';\r\nimport TransferApp from '../day2-practice/components'\r\nimport Nav from './Nav';\r\n\r\nconst RouterApp = () => {\r\n    return(\r\n        <Router>\r\n            <Nav />\r\n        \r\n            <Switch>\r\n                <Route path=\"/app\">\r\n                    <TransferApp />\r\n                </Route>\r\n                <Route path=\"/home\">\r\n                    <Home />\r\n                </Route>\r\n                <Route path=\"/about\">\r\n                    <About />\r\n                </Route>\r\n                <Route path=\"/users\">\r\n                    <Users />\r\n                </Route>\r\n            </Switch>\r\n            \r\n        </Router>\r\n    )\r\n}\r\n\r\nfunction Home() {\r\n    return <h2>Home</h2>;\r\n  }\r\n  \r\n  function About() {\r\n    return <h2>About</h2>;\r\n  }\r\n  \r\n  function Users() {\r\n    return (\r\n        <div className=\"w-3/4 m-auto\">\r\n            <FetchDataHooks />\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default RouterApp","// action : {\r\n//   type,\r\n//   payload,\r\n// }\r\nconst intitialState = {\r\n    balance: 0\r\n  }\r\n  \r\n  const balanceReducer = (state=intitialState, action) => {\r\n    switch (action.type) {\r\n      case \"add1000\":\r\n        return {\r\n          balance: state.balance + 1000\r\n        }\r\n\r\n      case \"add5000\": \r\n        return {\r\n          balance: state.balance + 5000\r\n        }\r\n\r\n      case \"withdraw1000\":\r\n        const confirmation = window.confirm('Are u sure?');\r\n        if (confirmation){\r\n          if (state.balance < 1000){\r\n            alert('not enough money')\r\n          }\r\n          else {\r\n            alert('succeed');\r\n            return {\r\n              balance: state.balance - 1000\r\n            }\r\n          }\r\n        } \r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default balanceReducer","import { createStore } from \"redux\";\r\nimport CounterReducer from \"./CounterApp/reducer\";\r\nimport balanceReducer from \"./TransferApp/reducer\";\r\n\r\n// import TodoReducer from \"./TodoListRedux/reducer\";\r\n// import thunkMiddleware  from \"redux-thunk\";\r\n\r\n\r\n// const store = createStore(CounterReducer)\r\nconst store = createStore(balanceReducer)\r\n\r\n// const composedEnhancer = applyMiddleware(thunkMiddleware)\r\n\r\n// const store = createStore(TodoReducer, composedEnhancer)\r\n\r\nexport default store","import React, {Fragment, useState} from 'react'\r\nimport TitleComponent from '../../../day2-practice/inline/TitleComponent'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nexport default function TransferApp() {\r\n    const balance = useSelector(state => state.balance)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className=\"bg-gray-100 w-2/4 my-16 p-8 rounded m-auto\">\r\n        <TitleComponent text={`Saldo anda adalah : Rp. ${balance}`} /> \r\n        <br />\r\n        <hr />\r\n        <div className=\"mt-2.5\">Apakah mau tambah saldo?</div>\r\n        <br />\r\n        <button onClick={() => dispatch({type: \"add1000\"})} className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded m-2.5 mb-4\">Tambah Rp.1000</button>\r\n        <button onClick={() => dispatch({type: \"add5000\"})} className=\"bg-yellow-500 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded m-2.5 mb-4\">Tambah Rp.5000</button>\r\n        <hr />\r\n        <div className=\"mt-2.5\">Apakah mau tarik saldo?</div>\r\n        \r\n        <br/>\r\n        {/* <button onClick={() => this.tarikSaldo1000()}>Tarik Rp.1000</button> */}\r\n        <button onClick={() => dispatch({type: \"withdraw1000\"})} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-4\">Tarik Rp.1000</button>\r\n        {/* <ButtonKlik klik={() => withdrw1000(1000)} text={\"Tarik Rp. 1000\"} color={\"Red\"}/> */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport CounterAppRedux from './CounterApp'\r\nimport store from './store'\r\nimport TransferApp from './TransferApp'\r\n\r\nexport default function ReactRedux() {\r\n  return (\r\n    <Provider store={store}>\r\n      {/* <CounterAppRedux /> */}\r\n      <TransferApp />\r\n    </Provider>\r\n  )\r\n}","import './App.css';\r\nimport './css/styles.css'\r\nimport StatefullExample from './day1-practice/components/beforeHooks/statefull';\r\nimport FetchDataHooks from './day1-practice/FetchHooks';\r\nimport CounterApp from './day1-practice/counterApp';\r\nimport CounterHooks from './day1-practice/Hooks/CounterHooks';\r\nimport TransferApp from './day2-practice/components';\r\nimport RouterApp from './day3-practice/Router';\r\nimport ReactReduxTransferApp from './day4-practice/react-redux/index';\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    // <div className=\"App bg-gray-100 w-2/4 my-16 p-8 rounded\">\r\n    //   <h2 className=\"text-lg font-bold mb-4\">Hello!</h2>\r\n    //   <TransferApp />\r\n    //   <FetchDataHooks />\r\n    // </div>\r\n    <div className=\"App m-20\">\r\n      {/* <RouterApp /> */}\r\n      <ReactReduxTransferApp />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter, HashRouter} from 'react-router-dom'\r\n\r\n// HashRouter utk githubpages\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}